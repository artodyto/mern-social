[{"/Users/artodyto/Documents/Projects/social-media/client/src/index.js":"1","/Users/artodyto/Documents/Projects/social-media/client/src/App.js":"2","/Users/artodyto/Documents/Projects/social-media/client/src/reducers/index.js":"3","/Users/artodyto/Documents/Projects/social-media/client/src/actions/posts.js":"4","/Users/artodyto/Documents/Projects/social-media/client/src/components/Posts/Posts.js":"5","/Users/artodyto/Documents/Projects/social-media/client/src/components/Form/Form.js":"6","/Users/artodyto/Documents/Projects/social-media/client/src/reducers/posts.js":"7","/Users/artodyto/Documents/Projects/social-media/client/src/components/Posts/Post/Post.js":"8","/Users/artodyto/Documents/Projects/social-media/client/src/api/index.js":"9"},{"size":462,"mtime":1611335242193,"results":"10","hashOfConfig":"11"},{"size":1560,"mtime":1611430931371,"results":"12","hashOfConfig":"11"},{"size":117,"mtime":1611251982685,"results":"13","hashOfConfig":"11"},{"size":1043,"mtime":1611426711417,"results":"14","hashOfConfig":"11"},{"size":708,"mtime":1611430267130,"results":"15","hashOfConfig":"11"},{"size":2813,"mtime":1611430699926,"results":"16","hashOfConfig":"11"},{"size":466,"mtime":1611427624702,"results":"17","hashOfConfig":"11"},{"size":1551,"mtime":1611428113893,"results":"18","hashOfConfig":"11"},{"size":337,"mtime":1611427002888,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"157ncv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/artodyto/Documents/Projects/social-media/client/src/index.js",[],["43","44"],"/Users/artodyto/Documents/Projects/social-media/client/src/App.js",["45","46","47"],"import React, { useEffect, useState } from 'react';\nimport { Layout, Button, Card, Avatar, Modal } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport Posts from './components/Posts/Posts';\nimport FormComponent from './components/Form/Form';\n\nfunction App() {\n  const { Header, Footer, Sider, Content } = Layout;\n  const [ currentId, setCurrentId ] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n    console.log('this was use effect on app js');\n  }, [currentId, dispatch])\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n    \n  const showModal = () => {\n      setIsModalVisible(true);\n  };\n  \n  const handleCancel = () => {\n      setIsModalVisible(false);\n  };\n\n  return (\n    <Layout>\n        <Content>\n          <Card style={{margin: 'auto', width: 300}}>\n            <div className=\"d-flex justify-content-between\">\n                <Avatar icon={<UserOutlined />}  style={{marginRight: '0.5rem', width: 40}} />\n                <Button style={{width: '100%', textAlign:'left'}} shape=\"round\" onClick={() => showModal()}>What's on your mind.</Button>\n            </div>\n          </Card>\n          <Posts setCurrentId={setCurrentId}/>\n        </Content>\n      <Modal title=\"Create Post\" visible={isModalVisible} onCancel={handleCancel} footer={null}>\n        <FormComponent currentId={currentId} setCurrentId={setCurrentId} />\n      </Modal>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/artodyto/Documents/Projects/social-media/client/src/reducers/index.js",[],"/Users/artodyto/Documents/Projects/social-media/client/src/actions/posts.js",[],"/Users/artodyto/Documents/Projects/social-media/client/src/components/Posts/Posts.js",[],"/Users/artodyto/Documents/Projects/social-media/client/src/components/Form/Form.js",["48","49"],"import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst FormComponent = ({currentId, setCurrentId}) => {\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    });\n    const dispatch = useDispatch();\n    const post = useSelector((state) => (currentId ? state.posts.find((post) => post._id == currentId) : null));\n    \n    useEffect(() => {\n        if (post) setPostData(post);\n    }, [post]);\n\n    const handleSubmit = () => {\n        if (currentId === 0) {\n            dispatch(createPost(postData));\n        } else {\n            dispatch(updatePost(currentId, postData));\n        }\n        onReset();\n    }\n\n    const layout = {\n        labelCol: {\n          span: 4,\n        },\n        wrapperCol: {\n        \n        },\n    };\n\n    const tailLayout = {\n        wrapperCol: { offset: 4},\n    };\n\n    const [form] = Form.useForm();\n\n    const onReset = () => {\n        setCurrentId(0);\n        setPostData({ creator: '',title: '',message: '',tags: '',selectedFile: '' });\n    };\n\n    return (\n        <>\n            <Form {...layout} form={form} name=\"Post\" onFinish={handleSubmit}>\n                <Form.Item label=\"Creator\">\n                    <Input value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                </Form.Item>\n                <Form.Item label=\"Title\">\n                    <Input value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                </Form.Item>\n                <Form.Item label=\"Message\">\n                    <Input value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                </Form.Item>\n                <Form.Item label=\"Tags\">\n                    <Input value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value })} />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <FileBase \n                        type=\"file\"\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData, selectedFile: base64})}\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight:\"8px\"}}>Submit</Button>\n                    <Button htmlType=\"button\" onClick={onReset}>Reset</Button>\n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default FormComponent;","/Users/artodyto/Documents/Projects/social-media/client/src/reducers/posts.js",["50"],"export default (posts = [], action) => {\n    switch (action.type) {\n        case \"FETCH_ALL\":\n            return action.payload;\n        case \"UPDATE\":\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        case \"CREATE\":\n            return [...posts, action.payload];\n        case \"DELETE\":\n            return posts.filter((post) => post._id !== action.payload);\n        default:\n            return posts;\n    }\n}","/Users/artodyto/Documents/Projects/social-media/client/src/components/Posts/Post/Post.js",["51","52"],"import React from 'react';\nimport moment from 'moment';\nimport { Card, Divider, Image, Button, Menu, Dropdown } from 'antd';\nimport { deletePost } from '../../../actions/posts';\nimport { useDispatch } from 'react-redux';\nimport { EllipsisOutlined } from '@ant-design/icons';\n\nconst Post = ({ post, setCurrentId }) => {\n    const dispatch = useDispatch();\n\n    const menu = (\n        <Menu>\n          <Menu.Item>\n            <a style={{width: 100}} onClick={(e) => updatePost(e)}>Edit</a>\n          </Menu.Item>\n        </Menu>\n    );\n\n    const showOptions = (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                <EllipsisOutlined />\n            </a>\n        </Dropdown>\n    );\n\n    const updatePost = (e) => {\n        e.preventDefault();\n        setCurrentId(post._id);\n    }\n\n    return (\n        <Card title={post.creator} extra={showOptions} style={{ width: 300, margin: \"1rem auto\" }}>\n            <h6>{moment(post.createdAt).fromNow()}</h6>\n            <Divider />\n            <p>{post.message}</p>\n            \n            {(post.selectedFile) ? <Image src={post.selectedFile} /> : \"\"}\n            <Divider />\n            <div className=\"d-flex justify-content-around align-items-center\">\n                <Button type=\"link\">Like</Button>\n                <Divider type=\"vertical\" />\n                <Button type=\"link\" onClick={() => dispatch(deletePost(post._id))}>Delete</Button>\n            </div>\n        </Card>\n    )\n}\n\nexport default Post;","/Users/artodyto/Documents/Projects/social-media/client/src/api/index.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":11,"column":11,"nodeType":"59","messageId":"60","endLine":11,"endColumn":17},{"ruleId":"57","severity":1,"message":"61","line":11,"column":19,"nodeType":"59","messageId":"60","endLine":11,"endColumn":25},{"ruleId":"57","severity":1,"message":"62","line":11,"column":27,"nodeType":"59","messageId":"60","endLine":11,"endColumn":32},{"ruleId":"57","severity":1,"message":"63","line":2,"column":31,"nodeType":"59","messageId":"60","endLine":2,"endColumn":39},{"ruleId":"64","severity":1,"message":"65","line":16,"column":90,"nodeType":"66","messageId":"67","endLine":16,"endColumn":92},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","endLine":14,"endColumn":2},{"ruleId":"71","severity":1,"message":"72","line":14,"column":13,"nodeType":"73","endLine":14,"endColumn":68},{"ruleId":"71","severity":1,"message":"72","line":21,"column":13,"nodeType":"73","endLine":21,"endColumn":80},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Header' is assigned a value but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]